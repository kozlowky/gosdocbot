version: "3.7"

services:
  app:
    build:
      context: .
      dockerfile: ./deploy/app.Dockerfile
    restart: always
    volumes:
      - ./static_volume:/project/static/
    env_file:
      - ./src/.env
    expose:
      - "8000"
    depends_on:
      - db

  celery:
    build:
      context: .
      dockerfile: ./deploy/app.Dockerfile
    command: celery --app core.celery_app.app worker -E --loglevel=info
    volumes:
      - ./static_volume:/project/static/
    env_file:
      - ./src/.env
    depends_on:
      - db
      - redis

  nginx:
    build:
      context: .
      dockerfile: ./deploy/nginx.Dockerfile
    restart: always
    volumes:
      - ./static_volume:/project/static/
    env_file:
      - ./src/.env
    expose:
      - "80"
    ports:
      - "8000:80"
    depends_on:
      - app

  proxy-manager:
    image: jc21/nginx-proxy-manager:latest
    restart: unless-stopped
    ports:
      - "80:80"
      - "81:81"
      - "443:443"
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt

  db:
    image: postgres:14-alpine
    volumes:
      - ./postgres_data:/var/lib/postgresql/data/
      - ./postgres_backups:/backups
    env_file:
      - ./src/.env
    ports:
      - "5432:5432"

  redis:
    image: redis:5-alpine
    restart: unless-stopped
    volumes:
      - ./redis_data:/data
    expose:
      - "6379"
